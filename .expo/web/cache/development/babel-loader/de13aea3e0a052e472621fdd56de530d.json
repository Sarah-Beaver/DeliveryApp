{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sarah/Desktop/UNT Fall 2020/SWE/GroupProject/DeliveryApp/screens/ProfileScreens/ChangePasswordScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { HyperlinkButton } from \"../../components/HyperlinkButton\";\nimport { Input } from \"../../components/Input\";\nimport { Container, Form, Item } from 'native-base';\nimport { SomeButton } from \"../../components/Button\";\nimport * as firebase from 'firebase';\nimport '@firebase/firestore';\nimport { ScrollView } from 'react-native-gesture-handler';\nLogBox.ignoreLogs(['Setting a timer for a long period of time']);\n\nvar ChangePasswordScreen = function ChangePasswordScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      proposedEmailName = _useState2[0],\n      setProposedEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      proposedOldPassword = _useState4[0],\n      setProposedOldPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      proposedNewPassword = _useState6[0],\n      setProposedNewPassword = _useState6[1];\n\n  useEffect(function () {\n    console.log(\"this should only run once\");\n\n    try {\n      var db = firebase.firestore();\n      var currUID = firebase.auth().currentUser.uid;\n      db.collection(\"Users\").doc(currUID).get().then(function (doc) {\n        if (doc.exists) {\n          var mydata = doc.data();\n          displayEmailHandler(mydata.email);\n        } else {\n          console.log(\"No such document!\");\n        }\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n    } catch (_unused) {\n      props.navigation.replace('Login');\n    }\n  }, []);\n\n  var displayEmailHandler = function displayEmailHandler(enteredText) {\n    setProposedEmail(enteredText);\n  };\n\n  var displayOldPasswordHandler = function displayOldPasswordHandler(enteredText) {\n    setProposedOldPassword(enteredText);\n  };\n\n  var displayNewPasswordHandler = function displayNewPasswordHandler(enteredText) {\n    setProposedNewPassword(enteredText);\n  };\n\n  UpdatePassword = function UpdatePassword(proposedEmailName, proposedOldPassword, proposedNewPassword, props) {\n    if (proposedNewPassword.length >= 8) {\n      var user = firebase.auth().currentUser;\n      var cred = firebase.auth.EmailAuthProvider.credential(proposedEmailName, proposedOldPassword);\n      user.reauthenticateWithCredential(cred).then(function () {\n        var db = firebase.firestore();\n        user.updatePassword(proposedNewPassword).then(function () {\n          alert(\"Password updated\");\n        }).catch(function (error) {\n          alert(\"Issue with updating password.\");\n          console.log(error);\n        });\n      }).catch(function (error) {\n        alert(\"Issue with updating password.\");\n        console.log(error);\n      });\n    } else {\n      alert(\"Password is needs to be at least 8 characters\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Email: \"), React.createElement(TextInput, {\n    value: proposedEmailName,\n    onChangeText: displayEmailHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.spacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), React.createElement(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Old Password: \"), React.createElement(TextInput, {\n    value: proposedOldPassword,\n    onChangeText: displayOldPasswordHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.spacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), React.createElement(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"New Password: \"), React.createElement(TextInput, {\n    value: proposedNewPassword,\n    onChangeText: displayNewPasswordHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.spacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), React.createElement(SomeButton, {\n    title: \"Confirm Changes\",\n    onPress: function onPress() {\n      return UpdatePassword(proposedEmailName, proposedOldPassword, proposedNewPassword, props);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), React.createElement(HyperlinkButton, {\n    title: 'Profile',\n    onPress: function onPress() {\n      return props.navigation.replace(\"Profile\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    margin: 10,\n    flexDirection: 'column'\n  },\n  spacing: {\n    padding: 15\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  textInput: {\n    fontSize: 20\n  }\n});\nexport default ChangePasswordScreen;","map":{"version":3,"sources":["/Users/sarah/Desktop/UNT Fall 2020/SWE/GroupProject/DeliveryApp/screens/ProfileScreens/ChangePasswordScreen.js"],"names":["React","useState","useEffect","LogBox","HyperlinkButton","Input","Container","Form","Item","SomeButton","firebase","ScrollView","ignoreLogs","ChangePasswordScreen","props","proposedEmailName","setProposedEmail","proposedOldPassword","setProposedOldPassword","proposedNewPassword","setProposedNewPassword","console","log","db","firestore","currUID","auth","currentUser","uid","collection","doc","get","then","exists","mydata","data","displayEmailHandler","email","catch","error","navigation","replace","enteredText","displayOldPasswordHandler","displayNewPasswordHandler","UpdatePassword","length","user","cred","EmailAuthProvider","credential","reauthenticateWithCredential","updatePassword","alert","styles","screen","spacing","StyleSheet","create","flex","margin","flexDirection","padding","text","fontSize","fontWeight","textInput"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;;;;;;SACoDC,M;AACpD,SAAQC,eAAR;AACA,SAAQC,KAAR;AACA,SAAQC,SAAR,EAAkBC,IAAlB,EAAuBC,IAAvB,QAAkC,aAAlC;AACA,SAAQC,UAAR;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,qBAAP;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAIAR,MAAM,CAACS,UAAP,CAAkB,CAAC,2CAAD,CAAlB;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAK;AAAA,kBAEOb,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,MAEhCc,iBAFgC;AAAA,MAEbC,gBAFa;;AAAA,mBAGef,QAAQ,CAAC,EAAD,CAHvB;AAAA;AAAA,MAGhCgB,mBAHgC;AAAA,MAGXC,sBAHW;;AAAA,mBAIejB,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,MAIhCkB,mBAJgC;AAAA,MAIXC,sBAJW;;AAOvClB,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,QAAG;AACD,UAAMC,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAX;AACA,UAAMC,OAAO,GAACf,QAAQ,CAACgB,IAAT,GAAgBC,WAAhB,CAA4BC,GAA1C;AAEAL,MAAAA,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BL,OAA3B,EAAoCM,GAApC,GAA0CC,IAA1C,CAAgD,UAACF,GAAD,EAAS;AAEvD,YAAIA,GAAG,CAACG,MAAR,EAAgB;AACd,cAAMC,MAAM,GAAEJ,GAAG,CAACK,IAAJ,EAAd;AACAC,UAAAA,mBAAmB,CAACF,MAAM,CAACG,KAAR,CAAnB;AACD,SAHD,MAGO;AAEHhB,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACF,OATD,EASGgB,KATH,CASS,UAASC,KAAT,EAAgB;AACrBlB,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCiB,KAAvC;AACD,OAXH;AAYD,KAhBD,CAiBA,gBAAK;AACHzB,MAAAA,KAAK,CAAC0B,UAAN,CAAiBC,OAAjB,CAAyB,OAAzB;AACD;AACF,GAtBM,EAsBL,EAtBK,CAAT;;AAwBA,MAAML,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACM,WAAD,EAAiB;AACzC1B,IAAAA,gBAAgB,CAAC0B,WAAD,CAAhB;AACH,GAFD;;AAGA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACD,WAAD,EAAiB;AACjDxB,IAAAA,sBAAsB,CAACwB,WAAD,CAAtB;AACD,GAFD;;AAGA,MAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACF,WAAD,EAAiB;AACjDtB,IAAAA,sBAAsB,CAACsB,WAAD,CAAtB;AACD,GAFD;;AAKAG,EAAAA,cAAc,GAAC,wBAAC9B,iBAAD,EAAmBE,mBAAnB,EAAuCE,mBAAvC,EAA2DL,KAA3D,EAAmE;AAEhF,QAAGK,mBAAmB,CAAC2B,MAApB,IAA4B,CAA/B,EACA;AACE,UAAIC,IAAI,GAAGrC,QAAQ,CAACgB,IAAT,GAAgBC,WAA3B;AACA,UAAIqB,IAAI,GAAGtC,QAAQ,CAACgB,IAAT,CAAcuB,iBAAd,CAAgCC,UAAhC,CACTnC,iBADS,EACUE,mBADV,CAAX;AAGA8B,MAAAA,IAAI,CAACI,4BAAL,CAAkCH,IAAlC,EAAwChB,IAAxC,CAA6C,YAAM;AACjD,YAAMT,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAX;AACAuB,QAAAA,IAAI,CAACK,cAAL,CAAoBjC,mBAApB,EAAyCa,IAAzC,CAA8C,YAAM;AAChDqB,UAAAA,KAAK,CAAC,kBAAD,CAAL;AACH,SAFD,EAEGf,KAFH,CAES,UAACC,KAAD,EAAW;AAChBc,UAAAA,KAAK,CAAC,+BAAD,CAAL;AACAhC,UAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AAAqB,SAJzB;AAKD,OAPD,EAOGD,KAPH,CAOS,UAACC,KAAD,EAAW;AAChBc,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACAhC,QAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AAAqB,OATzB;AAUD,KAhBD,MAiBI;AACFc,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACD;AACF,GAtBD;;AAwBI,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,SAAD;AAEA,IAAA,KAAK,EAAIxC,iBAFT;AAKA,IAAA,YAAY,EAAGqB,mBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkB,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,SAAD;AAEA,IAAA,KAAK,EAAIvC,mBAFT;AAKA,IAAA,YAAY,EAAG0B,yBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAbJ,EAuBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,EAwBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,SAAD;AAEA,IAAA,KAAK,EAAIrC,mBAFT;AAKA,IAAA,YAAY,EAAGyB,yBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAxBJ,EAkCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,EAmCI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,iBAAlB;AACA,IAAA,OAAO,EAAE;AAAA,aAAIX,cAAc,CAAC9B,iBAAD,EAAmBE,mBAAnB,EAAwCE,mBAAxC,EAA4DL,KAA5D,CAAlB;AAAA,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,EAuCI,oBAAC,eAAD;AACA,IAAA,KAAK,EAAE,SADP;AAEA,IAAA,OAAO,EAAE;AAAA,aAAKA,KAAK,CAAC0B,UAAN,CAAiBC,OAAjB,CAAyB,SAAzB,CAAL;AAAA,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,CADJ;AA+CH,CAjHD;;AAoHA,IAAMa,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAChCH,EAAAA,MAAM,EAAE;AACLI,IAAAA,IAAI,EAAC,CADA;AAELC,IAAAA,MAAM,EAAC,EAFF;AAKLC,IAAAA,aAAa,EAAC;AALT,GADwB;AAU/BL,EAAAA,OAAO,EAAC;AACNM,IAAAA,OAAO,EAAC;AADF,GAVuB;AAc/BC,EAAAA,IAAI,EAAC;AACHC,IAAAA,QAAQ,EAAC,EADN;AAELC,IAAAA,UAAU,EAAC;AAFN,GAd0B;AAoB/BC,EAAAA,SAAS,EAAC;AACRF,IAAAA,QAAQ,EAAC;AADD;AApBqB,CAAlB,CAAf;AAyBA,eAAenD,oBAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, LogBox, } from 'react-native';\nimport {HyperlinkButton} from '../../components/HyperlinkButton'\nimport {Input} from '../../components/Input';\nimport {Container,Form,Item} from 'native-base';\nimport {SomeButton} from '../../components/Button'\nimport * as firebase from 'firebase';\nimport '@firebase/firestore';\nimport { ScrollView } from 'react-native-gesture-handler';\n\n\n\nLogBox.ignoreLogs(['Setting a timer for a long period of time']);\n\nconst ChangePasswordScreen = props =>  {\n\nconst [proposedEmailName, setProposedEmail] = useState('');\nconst [proposedOldPassword, setProposedOldPassword] = useState('');\nconst [proposedNewPassword, setProposedNewPassword] = useState('');\n\n\nuseEffect(() => { \n    console.log(\"this should only run once\")\n    try{\n      const db = firebase.firestore();\n      const currUID=firebase.auth().currentUser.uid;\n      \n      db.collection(\"Users\").doc(currUID).get().then( (doc) => {\n        // console.log(doc);\n        if (doc.exists) {\n          const mydata= doc.data();\n          displayEmailHandler(mydata.email)\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n      }).catch(function(error) {\n          console.log(\"Error getting document:\", error);\n        });\n    }\n    catch{\n      props.navigation.replace('Login')\n    }\n  },[])\n\nconst displayEmailHandler = (enteredText) => {\n    setProposedEmail(enteredText);\n};\nconst displayOldPasswordHandler = (enteredText) => {\n  setProposedOldPassword(enteredText);\n};\nconst displayNewPasswordHandler = (enteredText) => {\n  setProposedNewPassword(enteredText);\n};\n\n\nUpdatePassword=(proposedEmailName,proposedOldPassword,proposedNewPassword,props)=>{\n\n  if(proposedNewPassword.length>=8)\n  {\n    var user = firebase.auth().currentUser;\n    var cred = firebase.auth.EmailAuthProvider.credential(\n      proposedEmailName, proposedOldPassword);\n\n    user.reauthenticateWithCredential(cred).then(() => {\n      const db = firebase.firestore();\n      user.updatePassword(proposedNewPassword).then(() => {\n          alert(\"Password updated\");\n      }).catch((error) => { \n          alert(\"Issue with updating password.\")\n          console.log(error); });\n    }).catch((error) => { \n        alert(\"Issue with updating password.\")\n        console.log(error); });\n  }\n  else{\n    alert(\"Password is needs to be at least 8 characters\")\n  }\n}\n\n    return (\n        <View style={styles.screen}>\n\n            <Item>\n                <Text >Email: </Text>\n                <TextInput \n                // placeholder= {profileInfo.displayName} \n                value = {proposedEmailName}\n                // value={profileInfo.displayName}\n                \n                onChangeText= {displayEmailHandler}\n                />\n            </Item>\n            <View style={styles.spacing}></View>\n            <Item>\n                <Text >Old Password: </Text>\n                <TextInput \n                // placeholder= {profileInfo.displayName} \n                value = {proposedOldPassword}\n                // value={profileInfo.displayName}\n                \n                onChangeText= {displayOldPasswordHandler}\n                />\n            </Item>\n            <View style={styles.spacing}></View>\n            <Item>\n                <Text >New Password: </Text>\n                <TextInput \n                // placeholder= {profileInfo.displayName} \n                value = {proposedNewPassword}\n                // value={profileInfo.displayName}\n                \n                onChangeText= {displayNewPasswordHandler}\n                />\n            </Item>\n            <View style={styles.spacing}></View>\n            <SomeButton title=\"Confirm Changes\"\n            onPress={()=>UpdatePassword(proposedEmailName,proposedOldPassword, proposedNewPassword,props)}\n            />\n\n            <HyperlinkButton \n            title={'Profile'} \n            onPress={()=> props.navigation.replace(\"Profile\")}\n            />\n\n        </View>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n\tscreen: {\n    flex:1,\n    margin:10,\n    // padding:10,\n    // paddingTop:20,\n    flexDirection:'column',\n\t\n  },\n \n  spacing:{\n    padding:15,\n  },\n \n  text:{\n    fontSize:20,\n\t\tfontWeight:'bold',\n\t\t// alignSelf:'flex-start',\n\t\t// padding:5,\n  },\n  textInput:{\n    fontSize:20,\n  },\n\n});\nexport default ChangePasswordScreen;"]},"metadata":{},"sourceType":"module"}