{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sarah/Desktop/UNT Fall 2020/SWE/GroupProject/DeliveryApp/screens/ProfileScreens/ChangeEmailScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { HyperlinkButton } from \"../../components/HyperlinkButton\";\nimport { Input } from \"../../components/Input\";\nimport { Container, Form, Item } from 'native-base';\nimport { SomeButton } from \"../../components/Button\";\nimport * as firebase from 'firebase';\nimport '@firebase/firestore';\nimport { ScrollView } from 'react-native-gesture-handler';\nLogBox.ignoreLogs(['Setting a timer for a long period of time']);\n\nvar ChangeEmailScreen = function ChangeEmailScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      proposedEmailName = _useState2[0],\n      setProposedEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      proposedPassword = _useState4[0],\n      setProposedPassword = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"this should only run once\");\n\n    try {\n      var db = firebase.firestore();\n      var currUID = firebase.auth().currentUser.uid;\n      db.collection(\"Users\").doc(currUID).get().then(function (doc) {\n        if (doc.exists) {\n          var mydata = doc.data();\n          displayEmailHandler(mydata.email);\n        } else {\n          console.log(\"No such document!\");\n        }\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n    } catch (_unused) {\n      props.navigation.replace('Login');\n    }\n  }, []);\n\n  var displayEmailHandler = function displayEmailHandler(enteredText) {\n    setProposedEmail(enteredText);\n  };\n\n  var displayPasswordHandler = function displayPasswordHandler(enteredText) {\n    setProposedPassword(enteredText);\n  };\n\n  UpdateEmail = function UpdateEmail(proposedEmailName, proposedPassword, props) {\n    var user = firebase.auth().currentUser;\n    var cred = firebase.auth.EmailAuthProvider.credential(user.email, proposedPassword);\n    user.reauthenticateWithCredential(cred).then(function () {\n      var db = firebase.firestore();\n      var currUID = user.uid;\n      user.updateEmail(proposedEmailName).then(function () {\n        db.collection(\"Users\").doc(currUID).update({\n          email: proposedEmailName\n        }).then(function () {\n          alert(\"Email has been updated\");\n          prop.navigation.replace('Profile');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }).catch(function (error) {\n        alert(\"Issue with updating email. Please verify valid email.\");\n        console.log(error);\n      });\n    }).catch(function (error) {\n      alert(\"Issue with updating email. Please verify valid email.\");\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Email: \"), React.createElement(TextInput, {\n    style: styles.textInput,\n    value: proposedEmailName,\n    onChangeText: displayEmailHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.spacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), React.createElement(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Password: \"), React.createElement(TextInput, {\n    style: styles.textInput,\n    value: proposedPassword,\n    secureTextEntry: true,\n    onChangeText: displayPasswordHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.spacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), React.createElement(SomeButton, {\n    title: \"Confirm Changes\",\n    onPress: function onPress() {\n      return UpdateEmail(proposedEmailName, proposedPassword, props);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), React.createElement(HyperlinkButton, {\n    title: 'Profile',\n    onPress: function onPress() {\n      return props.navigation.replace(\"Profile\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    margin: 10,\n    flexDirection: 'column'\n  },\n  spacing: {\n    padding: 15\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  textInput: {\n    fontSize: 20\n  }\n});\nexport default ChangeEmailScreen;","map":{"version":3,"sources":["/Users/sarah/Desktop/UNT Fall 2020/SWE/GroupProject/DeliveryApp/screens/ProfileScreens/ChangeEmailScreen.js"],"names":["React","useState","useEffect","LogBox","HyperlinkButton","Input","Container","Form","Item","SomeButton","firebase","ScrollView","ignoreLogs","ChangeEmailScreen","props","proposedEmailName","setProposedEmail","proposedPassword","setProposedPassword","console","log","db","firestore","currUID","auth","currentUser","uid","collection","doc","get","then","exists","mydata","data","displayEmailHandler","email","catch","error","navigation","replace","enteredText","displayPasswordHandler","UpdateEmail","user","cred","EmailAuthProvider","credential","reauthenticateWithCredential","updateEmail","update","alert","prop","styles","screen","text","textInput","spacing","StyleSheet","create","flex","margin","flexDirection","padding","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, LogBox, } from 'react-native';\nimport {HyperlinkButton} from '../../components/HyperlinkButton'\nimport {Input} from '../../components/Input';\nimport {Container,Form,Item} from 'native-base';\nimport {SomeButton} from '../../components/Button'\nimport * as firebase from 'firebase';\nimport '@firebase/firestore';\nimport { ScrollView } from 'react-native-gesture-handler';\n\n\n\nLogBox.ignoreLogs(['Setting a timer for a long period of time']);\n\nconst ChangeEmailScreen = props =>  {\n\n    const [proposedEmailName, setProposedEmail] = useState('');\n    const [proposedPassword, setProposedPassword] = useState('');\n    \n    useEffect(() => { \n        console.log(\"this should only run once\")\n        try{\n          const db = firebase.firestore();\n          const currUID=firebase.auth().currentUser.uid;\n          \n          db.collection(\"Users\").doc(currUID).get().then( (doc) => {\n            // console.log(doc);\n            if (doc.exists) {\n              const mydata= doc.data();\n              displayEmailHandler(mydata.email)\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n          }).catch(function(error) {\n              console.log(\"Error getting document:\", error);\n            });\n        }\n        catch{\n          props.navigation.replace('Login')\n        }\n      },[])\n    \n    const displayEmailHandler = (enteredText) => {\n        setProposedEmail(enteredText);\n    };\n    const displayPasswordHandler = (enteredText) => {\n        setProposedPassword(enteredText);\n    };\n    \n   \n\n    UpdateEmail=(proposedEmailName,proposedPassword,props)=>{\n\n        var user = firebase.auth().currentUser;\n        var cred = firebase.auth.EmailAuthProvider.credential(\n            user.email, proposedPassword);\n\n        user.reauthenticateWithCredential(cred).then(() => {\n    \n        const db = firebase.firestore();\n        const currUID=user.uid;\n        user.updateEmail(proposedEmailName).then(() => {\n            db.collection(\"Users\").doc(currUID).update({\n                email:proposedEmailName\n            }).then(()=>{\n                alert(\"Email has been updated\")\n                prop.navigation.replace('Profile')\n            }).catch((error)=> {\n                console.log(error);\n            });\n        }).catch((error) => { \n            alert(\"Issue with updating email. Please verify valid email.\")\n            console.log(error); });\n\n        }).catch((error) => { \n            alert(\"Issue with updating email. Please verify valid email.\")\n            console.log(error); });\n    }\n        return (\n            <View style={styles.screen}>\n                {/* <Form> */}\n                {/* <Item style={styles.title}>\n                    <Text style={styles.titleText}> </Text>\n       \n                </Item> */}\n                <Item>\n                    <Text style={styles.text}>Email: </Text>\n                    <TextInput style={styles.textInput}\n                    // placeholder= {profileInfo.displayName} \n                    value = {proposedEmailName}\n                    // value={profileInfo.displayName}\n                    \n                    onChangeText= {displayEmailHandler}\n                    />\n                </Item>\n                <View style={styles.spacing}></View>\n                <Item>\n                    <Text style={styles.text}>Password: </Text>\n                    <TextInput style={styles.textInput}\n                    // placeholder= {profileInfo.displayName} \n                    value = {proposedPassword}\n                    // value={profileInfo.displayName}\n                    secureTextEntry\n                    onChangeText= {displayPasswordHandler}\n                    />\n                </Item>\n                <View style={styles.spacing}></View>\n                <SomeButton title=\"Confirm Changes\"\n          onPress={()=>UpdateEmail(proposedEmailName,proposedPassword, props)}\n        />\n\n                <HyperlinkButton \n                title={'Profile'} \n                onPress={()=> props.navigation.replace(\"Profile\")}\n                />\n            {/* </Form> */}\n            </View>\n        );  \n}\n\n\nconst styles = StyleSheet.create({\n\tscreen: {\n    flex:1,\n    margin:10,\n    // padding:10,\n    // paddingTop:20,\n    flexDirection:'column',\n\t\n  },\n \n  spacing:{\n    padding:15,\n  },\n \n  text:{\n    fontSize:20,\n\t\tfontWeight:'bold',\n\t\t// alignSelf:'flex-start',\n\t\t// padding:5,\n  },\n  textInput:{\n    fontSize:20,\n  },\n\n});\nexport default ChangeEmailScreen;"]},"metadata":{},"sourceType":"module"}