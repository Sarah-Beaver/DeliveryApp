{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sarah/Desktop/UNT Fall 2020/SWE/GroupProject/DeliveryApp/screens/ProfileScreens/ProfileScreen.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { HyperlinkButton } from \"../../components/HyperlinkButton\";\nimport { Input } from \"../../components/Input\";\nimport { Container, Form, Item } from 'native-base';\nimport { SomeButton } from \"../../components/Button\";\nimport * as firebase from 'firebase';\nimport '@firebase/firestore';\nLogBox.ignoreLogs(['Setting a timer for a long period of time']);\n\nvar ProfileScreen = function ProfileScreen(props) {\n  var _useState = useState({\n    uid: \"\",\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    address: \"\",\n    phone: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      profileInfo = _useState2[0],\n      setProfileInfo = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      proposedDisplayName = _useState4[0],\n      setProposedDisplayName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      proposedPhoneName = _useState6[0],\n      setProposedPhone = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      proposedAddressNAme = _useState8[0],\n      setProposedAddress = _useState8[1];\n\n  var displayNameHandler = function displayNameHandler(enteredText) {\n    setProposedDisplayName(enteredText);\n  };\n\n  var displayPhoneHandler = function displayPhoneHandler(enteredText) {\n    setProposedPhone(enteredText);\n  };\n\n  var displayAddressHandler = function displayAddressHandler(enteredText) {\n    setProposedAddress(enteredText);\n  };\n\n  var db = firebase.firestore();\n  var currUID = firebase.auth().currentUser.uid;\n  var docRef = db.collection(\"Users\").doc(currUID);\n  docRef.get().then(function (doc) {\n    if (doc.exists) {\n      var mydata = doc.data();\n      setProfileInfo({\n        uid: mydata.uid,\n        email: mydata.email,\n        displayName: mydata.displayName,\n        password: mydata.password,\n        phone: mydata.phone,\n        address: mydata.address\n      });\n    } else {\n      console.log(\"No such document!\");\n    }\n  }).catch(function (error) {\n    console.log(\"Error getting document:\", error);\n  });\n\n  var signOut = function signOut(props) {\n    try {\n      firebase.auth().signOut();\n      props.navigation.replace('Login');\n    } catch (error) {\n      console.log(error.toString());\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"ProfileScreen!\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Email: \", profileInfo.email), React.createElement(View, {\n    style: styles.profileField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Display Name:\"), React.createElement(TextInput, {\n    placeholder: profileInfo.displayName,\n    value: proposedDisplayName,\n    onChangeText: displayNameHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }, \"Phone:\"), React.createElement(TextInput, {\n    placeholder: profileInfo.phone,\n    value: proposedPhoneName,\n    onChangeText: displayPhoneHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }\n  }, \"Address:\"), React.createElement(TextInput, {\n    placeholder: profileInfo.address,\n    value: proposedAddressName,\n    onChangeText: displayAddressHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), React.createElement(SomeButton, {\n    title: \"Confirm Changes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), React.createElement(HyperlinkButton, {\n    title: 'Signout',\n    style: styles.loginbutton,\n    onPress: function onPress() {\n      return signOut();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  profileField: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  title: {\n    marginBottom: 20,\n    textAlign: 'center'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/sarah/Desktop/UNT Fall 2020/SWE/GroupProject/DeliveryApp/screens/ProfileScreens/ProfileScreen.js"],"names":["React","useState","LogBox","HyperlinkButton","Input","Container","Form","Item","SomeButton","firebase","ignoreLogs","ProfileScreen","props","uid","displayName","email","password","address","phone","profileInfo","setProfileInfo","proposedDisplayName","setProposedDisplayName","proposedPhoneName","setProposedPhone","proposedAddressNAme","setProposedAddress","displayNameHandler","enteredText","displayPhoneHandler","displayAddressHandler","db","firestore","currUID","auth","currentUser","docRef","collection","doc","get","then","exists","mydata","data","console","log","catch","error","signOut","navigation","replace","toString","styles","screen","title","profileField","proposedAddressName","loginbutton","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","marginBottom","textAlign"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, LogBox, } from 'react-native';\nimport {HyperlinkButton} from '../../components/HyperlinkButton'\nimport {Input} from '../../components/Input';\nimport {Container,Form,Item} from 'native-base';\nimport {SomeButton} from '../../components/Button'\nimport * as firebase from 'firebase';\nimport '@firebase/firestore';\n\n\nLogBox.ignoreLogs(['Setting a timer for a long period of time']);\n\nconst ProfileScreen = props =>  {\n  const [profileInfo, setProfileInfo] = useState({\n    uid:\"\",\n    displayName: \"\",\n    email: \"\",\n    password:\"\",\n    address:\"\",\n    phone:\"\",\n  });\n  const [proposedDisplayName, setProposedDisplayName] = useState(\"\");\n  const [proposedPhoneName, setProposedPhone] = useState(\"\");\n  const [proposedAddressNAme, setProposedAddress] = useState(\"\");\n\n  const displayNameHandler = (enteredText) => {\n\t\tsetProposedDisplayName(enteredText);\n  };\n  \n  const displayPhoneHandler = (enteredText) => {\n\t\tsetProposedPhone(enteredText);\n  };\n  \n  const displayAddressHandler = (enteredText) => {\n\t\tsetProposedAddress(enteredText);\n  };\n  \n\n  const db = firebase.firestore();\n\n  const currUID = firebase.auth().currentUser.uid;\n  const docRef= db.collection(\"Users\").doc(currUID)\n  docRef.get().then( (doc) => {\n    if (doc.exists) {\n      const mydata= doc.data();\n      setProfileInfo({\n        uid: mydata.uid,\n        email: mydata.email,\n        displayName: mydata.displayName,\n        password:mydata.password,\n        phone:mydata.phone,\n        address:mydata.address,\n      })\n    } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n    }\n  }).catch(function(error) {\n      console.log(\"Error getting document:\", error);\n    });\n\n\n\n  const signOut=(props)=>{\n    try{\n        firebase.auth().signOut();\n        props.navigation.replace('Login')\n\t\t\t\t\n    }\n    catch(error){\n      console.log(error.toString())\n    }\n  }\n\n  return (\n    <View style={styles.screen}>\n      <Text style={styles.title}>ProfileScreen!</Text>\n      <Text>Email: {profileInfo.email}</Text>\n      <View style={styles.profileField}>\n        <Text>Display Name:</Text>\n        <TextInput\n          placeholder= {profileInfo.displayName}\n          value = {proposedDisplayName}\n          onChangeText= {displayNameHandler}\n        />\n         <Text>Phone:</Text>\n        <TextInput\n          placeholder= {profileInfo.phone}\n          value = {proposedPhoneName}\n          onChangeText= {displayPhoneHandler}\n        />\n         <Text>Address:</Text>\n        <TextInput\n          placeholder= {profileInfo.address}\n          value = {proposedAddressName}\n          onChangeText= {displayAddressHandler}\n        />\n      </View>\n      <SomeButton title=\"Confirm Changes\"/>\n      <HyperlinkButton \n\t\t\t\ttitle={'Signout'}\n\t\t\t\tstyle={styles.loginbutton} \n\t\t\t\tonPress={()=>signOut()}\n\t\t\t/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {\n\t\tflex:1,\n\t\tjustifyContent:'center',\n\t\talignItems: 'center',\n  },\n  profileField: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  title:{\n\t\tmarginBottom: 20,\n\t\ttextAlign:'center',\n\t},\n});\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}